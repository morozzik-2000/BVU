
#include "miusunprocesseddatatablewindow.h"
#include <QHeaderView>
#include <QFile>
#include <QTextStream>
#include <QDateTime>

MiusUnProcessedDataTableWindow::MiusUnProcessedDataTableWindow(QWidget *parent) : QWidget(parent) {
    setupTable();
    this->setWindowTitle("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ú–ò–£–°");
    this->resize(830, 300);
}

void MiusUnProcessedDataTableWindow::setupTable() {
    table = new QTableWidget(this);
    table->setColumnCount(6);
    table->horizontalHeader()->setSectionResizeMode(QHeaderView::ResizeToContents); // –ø–æ–ª–Ω—ã–µ –Ω–∞–¥–ø–∏—Å–∏
    table->setHorizontalHeaderLabels({
        "‚Ññ —Ä–∞–±–æ—á–µ–π\n—Ç—Ä–æ–π–∫–∏ –î–£–°", "–û–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ\n–î–£–°\n—Ä–∞–±–æ—á–µ–π\n—Ç—Ä–æ–π–∫–∏\n", "–û—Å—å –ø—Ä–æ–µ–∫—Ü–∏–∏",
        "–£–≥–ª–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º\n–∏–Ω—Ç–µ—Ä–≤–∞–ª–µ\n–∏–∑–º–µ—Ä–µ–Ω–∏—è,–≥—Ä–∞–¥/—Å", "–£–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞,\n—Ä–∞–¥",
        "–°–æ—Å—Ç–æ—è–Ω–∏–µ –î–£–°"
    });
    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    table->setStyleSheet(
        "QHeaderView::section {"
        "  background-color: #D3D3D3;"
        "  color: black;"
        "  padding: 4px;"
        "  border-bottom: 2px solid black;"
        "  font-weight: bold;"
        "}"
        "QTableWidget {"
        "  gridline-color: #BBBBBB;"
        "}"
        );

    table->setShowGrid(true);
    table->setGridStyle(Qt::SolidLine);

    table->horizontalHeader()->setFixedHeight(30);

    auto layout = new QVBoxLayout(this);
    layout->addWidget(table);
    setLayout(layout);
}

void MiusUnProcessedDataTableWindow::addUnProcessedMiusDataRow(int tripleNumber, int addr,
                                                            const QString &axis, double angularVelocity,
                                                            double angle, QString &stateDUS) {

    int newRow = table->rowCount();
    table->insertRow(newRow);
    table->setItem(newRow, 0, new QTableWidgetItem(QString::number(tripleNumber)));
    table->setItem(newRow, 1, new QTableWidgetItem(QString::number(addr)));
    table->setItem(newRow, 2, new QTableWidgetItem(axis));
    table->setItem(newRow, 3, new QTableWidgetItem(QString::number(angularVelocity)));
    table->setItem(newRow, 4, new QTableWidgetItem(QString::number(angle)));
    table->setItem(newRow, 5, new QTableWidgetItem(stateDUS));

    // üîΩ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    QFile file("MiusUnProcessedDataTable_log.txt");
    if (file.open(QIODevice::WriteOnly | QIODevice::Text | QIODevice::Append)) {
        QTextStream out(&file);
        out.setCodec("UTF-8");

        static const QList<int> columnWidths = {25, 10, 15, 40, 25, 20};
        static const QStringList headers = {
            "‚Ññ —Ä–∞–±–æ—á–µ–π —Ç—Ä–æ–π–∫–∏ –î–£–°", "–ê–¥—Ä–µ—Å RS", "–û—Å—å –ø—Ä–æ–µ–∫—Ü–∏–∏",
            "–£–≥–ª–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å (—Ä–∞–¥/—Å)", "–£–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞ (—Ä–∞–¥)", "–°–æ—Å—Ç–æ—è–Ω–∏–µ –î–£–°"
        };

        // –ö–∞–∂–¥—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ ‚Äî –Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if (unprocessedRowGroupCounter % 3 == 0) {
            out << "\n===== Time " << QDateTime::currentDateTime().toString("yyyy-MM-dd hh:mm:ss") << " =====\n";
            for (int i = 0; i < headers.size(); ++i)
                out << headers[i].leftJustified(columnWidths[i]);
            out << "\n";
            for (int w : columnWidths)
                out << QString("-").repeated(w);
            out << "\n";
        }

        QStringList rowItems = {
            QString::number(tripleNumber),
            QString::number(addr),
            axis,
            QString::number(angularVelocity),
            QString::number(angle),
            stateDUS
        };

        for (int i = 0; i < rowItems.size(); ++i)
            out << rowItems[i].leftJustified(columnWidths[i]);
        out << "\n";

        unprocessedRowGroupCounter++;

        file.close();
    } else {
        qWarning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏.");
    }
}
